package platform.opencv.cmds

@LinkerSection(text="imagecapture_text",rodata="imagecapture_rodata",data="imagecapture_data",bss="imagecapture_bss",arm_exidx="imagecapture_arm_exidx",arm_extab="imagecapture_arm_extab")
@AutoCmd
@Cmd(name = "imagecapture",
	help = "Basic OpenCV test")
@BuildDepends(third_party.lib.opencv.all)
@Build(stage=2)
module imagecapture {
	source "imagecapture.cpp"

	depends embox.driver.video.fb
	depends third_party.lib.opencv.all
}

@LinkerSection(text="edges_text",rodata="edges_rodata",data="edges_data",bss="edges_bss",arm_exidx="edges_arm_exidx",arm_extab="edges_arm_extab")
@AutoCmd
@Cmd(name = "edges",
	help = "Basic OpenCV test")
@BuildDepends(third_party.lib.opencv.all)
@Build(stage=2)
module edges {
	source "edges.cpp"

	depends embox.driver.video.fb
	depends third_party.lib.opencv.all
}

@LinkerSection(text="version_text",rodata="version_rodata",data="version_data",bss="version_bss",arm_exidx="version_arm_exidx",arm_extab="version_arm_extab")
@AutoCmd
@Cmd(name = "opencv_version",
	help = "Print OpenCV build info")
@BuildDepends(third_party.lib.opencv.all)
@Build(stage=2)
module version {
	source "version.cpp"

	depends third_party.lib.opencv.all
<<<<<<< HEAD
}

@AutoCmd
@Cmd(name = "facedetect",
	help = "Face and eyes detection")
@BuildDepends(third_party.lib.opencv)
@Build(stage=2)
module facedetect {
	source "facedetect.cpp"

	depends embox.driver.video.fb
	depends third_party.lib.opencv
=======
>>>>>>> ae4cc689b... opencv Mybuild
}

@LinkerSection(text="facedetect_text",rodata="facedetect_rodata",data="facedetect_data",bss="facedetect_bss",arm_exidx="facedetect_arm_exidx",arm_extab="facedetect_arm_extab")
@AutoCmd
@Cmd(name = "facedetect",
	help = "Face and eyes detection")
@BuildDepends(third_party.lib.opencv.all)
@Build(stage=2)
module facedetect {
	source "facedetect.cpp"

	depends embox.driver.video.fb
	depends third_party.lib.opencv.all
}
